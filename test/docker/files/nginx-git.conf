##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

server {
    listen 443 ssl default_server;
    listen [::]:443 ssl default_server;

    root /srv/;
    access_log   /var/log/nginx/<mysite>-access.log;
    error_log   /var/log/nginx/<mysite>-error.log;

    index index.html index.htm;

    server_name example.com;

    gzip off;
    ssl_certificate /etc/ssl/certs/linux-pkg.crt;
    ssl_certificate_key /etc/ssl/private/linux-pkg.key;

    # Serve git repositories
    location ~ /git(/.*) {
        if ($arg_service = git-receive-pack) {
            rewrite /git(/.*) @git_write$1 last;
        }

        if ($uri ~ ^/git/.*/git-receive-pack$) {
            rewrite /git(/.*) @git_write$1 last;
        }

        if ($arg_service = git-upload-pack) {
            rewrite /git(/.*) @git_read$1 last;
        }

        if ($uri ~ ^/git/.*/git-upload-pack$) {
            rewrite /git(/.*) @git_read$1 last;
        }
    }
    location ~ @git_read(/.*) {
        include git-http-backend.conf;
    }
    location ~ @git_write(/.*) {
        auth_basic "Password required to push to Git.";
        auth_basic_user_file /etc/nginx/.htpasswd;
        include git-http-backend.conf;
    }
}

