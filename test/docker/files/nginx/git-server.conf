#
# Configuration for the HTTPS git server.
#
server {
    listen 443 ssl default_server;
    listen [::]:443 ssl default_server;

    root /srv/;

    #server_name example.com;

    gzip off;
    ssl_certificate /etc/ssl/certs/linux-pkg.crt;
    ssl_certificate_key /etc/ssl/private/linux-pkg.key;

    # Serve git repositories
    location ~ /git(/.*) {
        if ($arg_service = git-receive-pack) {
            rewrite /git(/.*) @git_write$1 last;
        }

        if ($uri ~ ^/git/.*/git-receive-pack$) {
            rewrite /git(/.*) @git_write$1 last;
        }

        if ($arg_service = git-upload-pack) {
            rewrite /git(/.*) @git_read$1 last;
        }

        if ($uri ~ ^/git/.*/git-upload-pack$) {
            rewrite /git(/.*) @git_read$1 last;
        }
    }
    location ~ @git_read(/.*) {
        fastcgi_pass unix:/run/fcgi.sock;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME /usr/libexec/git-core/git-http-backend;
        fastcgi_param GIT_HTTP_EXPORT_ALL "";
        fastcgi_param GIT_PROJECT_ROOT /srv/git;
        fastcgi_param PATH_INFO $1;
        fastcgi_param REMOTE_USER $remote_user;
    }
    location ~ @git_write(/.*) {
        auth_basic "Password required to push to Git.";
        auth_basic_user_file /etc/nginx/.htpasswd;

        fastcgi_pass unix:/run/fcgi.sock;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME /usr/libexec/git-core/git-http-backend;
        fastcgi_param GIT_HTTP_EXPORT_ALL "";
        fastcgi_param GIT_PROJECT_ROOT /srv/git;
        fastcgi_param PATH_INFO $1;
        fastcgi_param REMOTE_USER $remote_user;
    }
}
